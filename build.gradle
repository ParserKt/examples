import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
  repositories { jcenter() }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
  }
}

plugins {
  id "kotlin-multiplatform" version "1.3.61"
}

allprojects {
apply plugin: "kotlin-multiplatform"
apply plugin: "com.github.johnrengelman.shadow"
kotlin {
  jvm(); js()
}

repositories { jcenter() }
ext.kotlin = { name -> return "org.jetbrains.kotlin:kotlin-$name:1.3.61" }

dependencies {
  commonMainImplementation kotlin("stdlib-common")
  jvmMainImplementation kotlin("stdlib")
  jsMainImplementation kotlin("stdlib-js")

  commonTestImplementation kotlin("test-common")
  commonTestImplementation kotlin("test-annotations-common")
  jvmTestImplementation kotlin("test-junit")
  jsTestImplementation kotlin("test-js")
}

repositories {
  maven { url "https://jitpack.io" }
}
dependencies {
  commonMainImplementation "com.github.parserkt:parserkt:1.1" // for Kotlin-multiplatform metadata
  commonMainImplementation "com.github.parserkt.parserkt:parserkt-ext:1.1"
}

}

dependencies {
  commonMainImplementation project("hanCalc")
  ["simple", "known", "extended"].forEach { commonMainImplementation project("${it}Syntax") }
}

task shadowJar(type: ShadowJar, dependsOn: [jvmJar]) {
  baseName = project.name.capitalize()
  manifest {}
  def projects =  ["simple", "known", "extended"].collect { project("${it}Syntax") } + project("hanCalc")
  minimize {
    projects.forEach { exclude(project(it.name)) }
  }

  from projects.collect { it.jvmJar.archiveFile }
  from projects.collect { it.jsJar.archiveFile }
  configurations.add(project.configurations.jvmRuntimeClasspath)
}
